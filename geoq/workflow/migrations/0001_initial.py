# Generated by Django 3.0.5 on 2020-04-17 14:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import jsonfield.fields



class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Event summary')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('is_mandatory', models.BooleanField(default=False, help_text='This event must be marked as complete before moving out of the associated state.', verbose_name='Mandatory event')),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
            },
        ),
        migrations.CreateModel(
            name='EventType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Event Type Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disabled', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Participant',
                'verbose_name_plural': 'Participants',
                'ordering': ['-disabled', 'workflowactivity', 'user'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Name of Role')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Role',
                'verbose_name_plural': 'Roles',
                'ordering': ['name'],
                'permissions': (('can_define_roles', 'Can define roles'),),
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('is_start_state', models.BooleanField(default=False, help_text='There can only be one start state for a workflow', verbose_name='Is the start state?')),
                ('is_end_state', models.BooleanField(default=False, help_text='An end state shows that the workflow is complete', verbose_name='Is an end state?')),
                ('estimation_value', models.IntegerField(default=0, help_text='Use whole numbers', verbose_name='Estimated time (value)')),
                ('estimation_unit', models.IntegerField(choices=[(1, 'Second(s)'), (60, 'Minute(s)'), (3600, 'Hour(s)'), (86400, 'Day(s)'), (604800, 'Week(s)')], default=86400, verbose_name='Estimation unit of time')),
                ('slug', models.SlugField(blank=True, verbose_name='Slug')),
                ('color', jsonfield.fields.JSONField(blank=True, help_text='Color properties for this state. Should be json that includes color, fillColor, fillOpacity, opacity and weight', null=True)),
                ('roles', models.ManyToManyField(blank=True, to='workflow.Role')),
            ],
            options={
                'verbose_name': 'State',
                'verbose_name_plural': 'States',
                'ordering': ['-is_start_state', 'is_end_state'],
            },
        ),
        migrations.CreateModel(
            name='Transition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Use an "active" verb. e.g. "Close Issue", "Open Vacancy" or "Start Interviews"', max_length=128, verbose_name='Name of transition')),
                ('from_state', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transitions_from', to='workflow.State')),
                ('roles', models.ManyToManyField(blank=True, to='workflow.Role')),
                ('to_state', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transitions_into', to='workflow.State')),
            ],
            options={
                'verbose_name': 'Transition',
                'verbose_name_plural': 'Transitions',
            },
        ),
        migrations.CreateModel(
            name='Workflow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Workflow Name')),
                ('slug', models.SlugField(verbose_name='Slug')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('status', models.IntegerField(choices=[(0, 'In definition'), (1, 'Active'), (2, 'Retired')], default=0, verbose_name='Status')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('cloned_from', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='workflow.Workflow')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Workflow',
                'verbose_name_plural': 'Workflows',
                'ordering': ['status', 'name'],
                'permissions': (('can_manage_workflows', 'Can manage workflows'),),
            },
        ),
        migrations.CreateModel(
            name='WorkflowActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('completed_on', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('workflow', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='workflow.Workflow')),
            ],
            options={
                'verbose_name': 'Workflow Activity',
                'verbose_name_plural': 'Workflow Activites',
                'ordering': ['-completed_on', '-created_on'],
                'permissions': (('can_start_workflow', 'Can start a workflow'), ('can_assign_roles', 'Can assign roles')),
            },
        ),
        migrations.CreateModel(
            name='WorkflowHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_type', models.IntegerField(choices=[(1, 'Transition'), (2, 'Event'), (3, 'Role'), (4, 'Comment')], help_text='The sort of thing being logged')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('note', models.TextField(blank=True, verbose_name='Note')),
                ('deadline', models.DateTimeField(blank=True, help_text='The deadline for staying in this state', null=True, verbose_name='Deadline')),
                ('event', models.ForeignKey(help_text='The event relating to this happening in the workflow history', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='history', to='workflow.Event')),
                ('participant', models.ForeignKey(help_text='The participant who triggered this happening in the workflow history', on_delete=django.db.models.deletion.PROTECT, to='workflow.Participant')),
                ('state', models.ForeignKey(help_text='The state at this point in the workflow history', null=True, on_delete=django.db.models.deletion.PROTECT, to='workflow.State')),
                ('transition', models.ForeignKey(help_text='The transition relating to this happening in the workflow history', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='history', to='workflow.Transition')),
                ('workflowactivity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='history', to='workflow.WorkflowActivity')),
            ],
            options={
                'verbose_name': 'Workflow History',
                'verbose_name_plural': 'Workflow Histories',
                'ordering': ['-created_on'],
            },
        ),
        migrations.AddField(
            model_name='transition',
            name='workflow',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transitions', to='workflow.Workflow'),
        ),
        migrations.AddField(
            model_name='state',
            name='workflow',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='states', to='workflow.Workflow'),
        ),
        migrations.AddField(
            model_name='participant',
            name='roles',
            field=models.ManyToManyField(blank=True, to='workflow.Role'),
        ),
        migrations.AddField(
            model_name='participant',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='participant',
            name='workflowactivity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='participants', to='workflow.WorkflowActivity'),
        ),
        migrations.AddField(
            model_name='event',
            name='event_types',
            field=models.ManyToManyField(to='workflow.EventType'),
        ),
        migrations.AddField(
            model_name='event',
            name='roles',
            field=models.ManyToManyField(to='workflow.Role'),
        ),
        migrations.AddField(
            model_name='event',
            name='state',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='events', to='workflow.State'),
        ),
        migrations.AddField(
            model_name='event',
            name='workflow',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='events', to='workflow.Workflow'),
        ),
        migrations.AlterUniqueTogether(
            name='participant',
            unique_together={('user', 'workflowactivity')},
        ),
    ]
